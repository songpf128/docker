services:
  nginx:
    build: ./nginx #构建nginx 目录下的 Dockerfile
    volumes:
      - C:\web:/www
    labels: #为容器添加辅助说明信息
      - nginx
    ports: # 暴露端口信息
      - 80:80 # 宿主机:容器
      - 443:443
    restart: always # 容器退出后的重启策略为始终重启
    networks: # 我们第一步填写的网络名称
      - lnmp
  php83:
    build: ./php83
    volumes:
      - C:\web:/www
    labels:
      - php
      - php-fpm
    expose:
      - 9000
    restart: always
    depends_on:
      - redis
    networks:
      - lnmp
  php80:
    build: ./php80
    volumes:
      - C:\web:/www
    labels:
      - php
      - php-fpm
    expose:
      - 9000
    restart: always
    depends_on:
      - redis
    networks:
      - lnmp
  php56:
    build: ./php56
    volumes:
      - C:\web:/www
    labels:
      - php
      - php-fpm
    expose:
      - 9000
    restart: always
    depends_on:
      - redis
    networks:
      - lnmp
  php74:
    build: ./php74
    volumes:
      - C:\web:/www
    labels:
      - php
      - php-fpm
    expose:
      - 9000
    restart: always
    depends_on:
      - redis
    networks:
      - lnmp
# mysql:
#     build: ./mysql
#     volumes:
#       - ./data/mysql:/var/lib/mysql
#     labels:
#       - mysql
#       - database
#     expose:
#       - 3306
#     ports:
#       - 3306:3306
#       - 3307:3306
#     environment:
#       MYSQL_ROOT_PASSWORD: GqLWQ2YU
#     networks:
#       - lnmp
  redis:
    build: ./redis
    labels:
      - redis
    expose:
      - 6379
    volumes:
      - ./data/redis:/data # 数据化持久目录，MySQL 一节细讲了，这里就不赘述了。
    ports:
      - 6379:6379
    restart: always
    networks:
      - lnmp
networks:
  lnmp: # 这里的名字随便修改成什么都可以。
